    // sobrecarga
    protected $_tablename = '{tablename}';
    protected $_package   = '{package}';
    
    {members}
    public ${name};
    {/members}
    
    {accessors}
    /**
     * get {name}
     *
     */
    public function get{accessor}() {
    	return $this->{name};
    }
    
    /**
     * set {name}
     * @param Type $value
     *
     */
    public function set{accessor}($value) {
    	$this->{name} = $value;
    }
    {/accessors}
    
    /**
     * Inicia os valores da classe
     * @author {author}
     * @return void
     */
    protected function _initialize()
    {
        
        
        # nome_do_membro, nome_da_coluna, tipo, comprimento, opcoes
        {definition}
        $this->_addField('{name}', '{column}', '{type}', {length}, {options});
        {/definition}

        {relations}
        $this->_addForeignRelation('{name}', self::{type}, '{class}', '{linkOn}', {table_join}, {column_join}, {lazy});
        {/relations}
    }

    /**
     * Recupera um objeto estaticamente
     * @author {author}
     * @return {classname}
     */
    public static function staticGet($pk, $pkValue = null)
    {
        $obj = new {classname};
        $obj->get($pk, $pkValue);
        return $obj;
    }

	/**
	 * chama o destrutor pai
	 *
	 */
	function __destruct()
	{
		parent::__destruct();
	}
	
    #------------------------------------------------------#
    # Coloque todos os metodos personalizados abaixo de    #
    # END AUTOCODE                                         #
    #------------------------------------------------------#
    #### END AUTOCODE

